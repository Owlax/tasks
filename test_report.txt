
> react-typescript-starter@0.1.0 test
> react-scripts test --coverage

Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
PASS src/nested.test.ts
PASS src/arrays.test.ts
PASS src/objects.test.ts
PASS src/components/StartAttempt.test.tsx
PASS src/components/TwoDice.test.tsx
FAIL src/form-components/MultipleChoiceQuestion.test.tsx
  ‚óè MultipleChoiceQuestion Component tests ‚Ä∫ There is a select box

    TestingLibraryElementError: Unable to find an accessible element with the role "combobox"

    Here are the accessible roles:

      heading:

      Name "Multiple Choice Question 123 2":
      [36m<h3 />[39m

      --------------------------------------------------

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mMultiple Choice Question [0m
            [0m1[0m
            [0m2[0m
            [0m3[0m
            [0m [0m
            [0m2[0m
          [36m</h3>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      12 |             />
      13 |         );
    > 14 |         expect(screen.getByRole("combobox")).toBeInTheDocument();
         |                       ^
      15 |     });
      16 |     test("The answer is initially incorrect", () => {
      17 |         render(

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByRole (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/form-components/MultipleChoiceQuestion.test.tsx:14:23)

  ‚óè MultipleChoiceQuestion Component tests ‚Ä∫ The answer is initially incorrect

    TestingLibraryElementError: Unable to find an element with the text: /‚ùå/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mMultiple Choice Question [0m
            [0m1[0m
            [0m2[0m
            [0m3[0m
            [0m [0m
            [0m2[0m
          [36m</h3>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      21 |             />
      22 |         );
    > 23 |         expect(screen.getByText(/‚ùå/i)).toBeInTheDocument();
         |                       ^
      24 |         expect(screen.queryByText(/‚úîÔ∏è/i)).not.toBeInTheDocument();
      25 |     });
      26 |     test("Can choose the correct answer", () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/form-components/MultipleChoiceQuestion.test.tsx:23:23)

  ‚óè MultipleChoiceQuestion Component tests ‚Ä∫ Can choose the correct answer

    TestingLibraryElementError: Unable to find an accessible element with the role "combobox"

    Here are the accessible roles:

      heading:

      Name "Multiple Choice Question 123 2":
      [36m<h3 />[39m

      --------------------------------------------------

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mMultiple Choice Question [0m
            [0m1[0m
            [0m2[0m
            [0m3[0m
            [0m [0m
            [0m2[0m
          [36m</h3>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      31 |             />
      32 |         );
    > 33 |         const select = screen.getByRole("combobox");
         |                               ^
      34 |         userEvent.selectOptions(select, "2");
      35 |         expect(screen.getByText(/‚úîÔ∏è/i)).toBeInTheDocument();
      36 |         expect(screen.queryByText(/‚ùå/i)).not.toBeInTheDocument();

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByRole (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/form-components/MultipleChoiceQuestion.test.tsx:33:31)

  ‚óè MultipleChoiceQuestion Component tests ‚Ä∫ Can choose the correct answer and then incorrect

    TestingLibraryElementError: Unable to find an accessible element with the role "combobox"

    Here are the accessible roles:

      heading:

      Name "Multiple Choice Question 123 2":
      [36m<h3 />[39m

      --------------------------------------------------

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mMultiple Choice Question [0m
            [0m1[0m
            [0m2[0m
            [0m3[0m
            [0m [0m
            [0m2[0m
          [36m</h3>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      43 |             />
      44 |         );
    > 45 |         const select = screen.getByRole("combobox");
         |                               ^
      46 |         userEvent.selectOptions(select, "2");
      47 |         expect(screen.getByText(/‚úîÔ∏è/i)).toBeInTheDocument();
      48 |         expect(screen.queryByText(/‚ùå/i)).not.toBeInTheDocument();

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByRole (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/form-components/MultipleChoiceQuestion.test.tsx:45:31)

  ‚óè MultipleChoiceQuestion Component tests ‚Ä∫ Can start off initially correct

    TestingLibraryElementError: Unable to find an accessible element with the role "combobox"

    Here are the accessible roles:

      heading:

      Name "Multiple Choice Question AlphaBetaGamma Alpha":
      [36m<h3 />[39m

      --------------------------------------------------

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mMultiple Choice Question [0m
            [0mAlpha[0m
            [0mBeta[0m
            [0mGamma[0m
            [0m [0m
            [0mAlpha[0m
          [36m</h3>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      58 |             />
      59 |         );
    > 60 |         const select = screen.getByRole("combobox");
         |                               ^
      61 |         userEvent.selectOptions(select, "Alpha");
      62 |         expect(screen.getByText(/‚úîÔ∏è/i)).toBeInTheDocument();
      63 |         expect(screen.queryByText(/‚ùå/i)).not.toBeInTheDocument();

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByRole (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/form-components/MultipleChoiceQuestion.test.tsx:60:31)

  ‚óè MultipleChoiceQuestion Component tests ‚Ä∫ One more test of choosing the right answer

    TestingLibraryElementError: Unable to find an element with the text: /‚ùå/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mMultiple Choice Question [0m
            [0mHello[0m
            [0mWorld[0m
            [0m [0m
            [0mWorld[0m
          [36m</h3>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      70 |             />
      71 |         );
    > 72 |         expect(screen.getByText(/‚ùå/i)).toBeInTheDocument();
         |                       ^
      73 |         expect(screen.queryByText(/‚úîÔ∏è/i)).not.toBeInTheDocument();
      74 |         const select = screen.getByRole("combobox");
      75 |         userEvent.selectOptions(select, "World");

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/form-components/MultipleChoiceQuestion.test.tsx:72:23)

PASS src/bad-components/ChooseTeam.test.tsx
PASS src/bad-components/DoubleHalf.test.tsx
PASS src/functions.test.ts
PASS src/form-components/CheckAnswer.test.tsx
FAIL src/form-components/EditMode.test.tsx
  ‚óè EditMode Component tests ‚Ä∫ There is one checkbox and no textboxes

    TestingLibraryElementError: Unable to find an accessible element with the role "checkbox"

    Here are the accessible roles:

      heading:

      Name "Edit Mode":
      [36m<h3 />[39m

      --------------------------------------------------

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mEdit Mode[0m
          [36m</h3>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

       7 |     beforeEach(() => render(<EditMode />));
       8 |     test("There is one checkbox and no textboxes", () => {
    >  9 |         const switchButton = screen.getByRole("checkbox");
         |                                     ^
      10 |         expect(switchButton).toBeInTheDocument();
      11 |         expect(switchButton.parentElement).toHaveClass("form-switch");
      12 |         expect(screen.queryByRole("textbox")).not.toBeInTheDocument();

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByRole (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/form-components/EditMode.test.tsx:9:37)

  ‚óè EditMode Component tests ‚Ä∫ Initial text should be 'Your Name is a student'.

    TestingLibraryElementError: Unable to find an element with the text: /Your Name is a student/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mEdit Mode[0m
          [36m</h3>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      13 |     });
      14 |     test("Initial text should be 'Your Name is a student'.", () => {
    > 15 |         expect(screen.getByText(/Your Name is a student/i)).toBeInTheDocument();
         |                       ^
      16 |     });
      17 |     test("Can switch into Edit Mode", () => {
      18 |         const switchButton = screen.getByRole("checkbox");

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/form-components/EditMode.test.tsx:15:23)

  ‚óè EditMode Component tests ‚Ä∫ Can switch into Edit Mode

    TestingLibraryElementError: Unable to find an accessible element with the role "checkbox"

    Here are the accessible roles:

      heading:

      Name "Edit Mode":
      [36m<h3 />[39m

      --------------------------------------------------

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mEdit Mode[0m
          [36m</h3>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      16 |     });
      17 |     test("Can switch into Edit Mode", () => {
    > 18 |         const switchButton = screen.getByRole("checkbox");
         |                                     ^
      19 |         switchButton.click();
      20 |         expect(screen.getByRole("textbox")).toBeInTheDocument();
      21 |         expect(screen.getAllByRole("checkbox")).toHaveLength(2);

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByRole (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/form-components/EditMode.test.tsx:18:37)

  ‚óè EditMode Component tests ‚Ä∫ Editing the name and student status changes the text

    TestingLibraryElementError: Unable to find an accessible element with the role "checkbox"

    Here are the accessible roles:

      heading:

      Name "Edit Mode":
      [36m<h3 />[39m

      --------------------------------------------------

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mEdit Mode[0m
          [36m</h3>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      22 |     });
      23 |     test("Editing the name and student status changes the text", () => {
    > 24 |         const switchButton = screen.getByRole("checkbox");
         |                                     ^
      25 |         switchButton.click();
      26 |         const nameBox = screen.getByRole("textbox");
      27 |         userEvent.type(nameBox, "Ada Lovelace");

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByRole (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/form-components/EditMode.test.tsx:24:37)

  ‚óè EditMode Component tests ‚Ä∫ Different name, click student box twice changes the text

    TestingLibraryElementError: Unable to find an accessible element with the role "checkbox"

    Here are the accessible roles:

      heading:

      Name "Edit Mode":
      [36m<h3 />[39m

      --------------------------------------------------

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mEdit Mode[0m
          [36m</h3>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      34 |     });
      35 |     test("Different name, click student box twice changes the text", () => {
    > 36 |         const switchButton = screen.getByRole("checkbox");
         |                                     ^
      37 |         switchButton.click();
      38 |         const nameBox = screen.getByRole("textbox");
      39 |         userEvent.type(nameBox, "Alan Turing");

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByRole (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/form-components/EditMode.test.tsx:36:37)

PASS src/components/ChangeType.test.tsx
PASS src/components/CycleHoliday.test.tsx
FAIL src/form-components/GiveAttempts.test.tsx
  ‚óè GiveAttempts Component tests ‚Ä∫ There is a number entry box and two buttons

    TestingLibraryElementError: Unable to find an accessible element with the role "spinbutton"

    Here are the accessible roles:

      heading:

      Name "Give Attempts":
      [36m<h3 />[39m

      --------------------------------------------------
      textbox:

      Name "Number of Attemps:":
      [36m<input[39m
        [33mclass[39m=[32m"form-control"[39m
        [33mid[39m=[32m"formMovieReleased"[39m
        [33mvalue[39m=[32m"3"[39m
      [36m/>[39m

      --------------------------------------------------
      button:

      Name "Gain":
      [36m<button[39m
        [33mclass[39m=[32m"btn btn-primary"[39m
        [33mtype[39m=[32m"button"[39m
      [36m/>[39m

      Name "Use":
      [36m<button[39m
        [33mclass[39m=[32m"btn btn-primary"[39m
        [33mtype[39m=[32m"button"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mGive Attempts[0m
          [36m</h3>[39m
          [36m<div[39m
            [33mclass[39m=[32m"row"[39m
          [36m>[39m
            [36m<label[39m
              [33mclass[39m=[32m"form-label col-form-label col-sm-2"[39m
              [33mfor[39m=[32m"formMovieReleased"[39m
            [36m>[39m
              [0mNumber of Attemps:[0m
            [36m</label>[39m
            [36m<div[39m
              [33mclass[39m=[32m"col"[39m
            [36m>[39m
              [36m<input[39m
                [33mclass[39m=[32m"form-control"[39m
                [33mid[39m=[32m"formMovieReleased"[39m
                [33mvalue[39m=[32m"3"[39m
              [36m/>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<span>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mGain[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mUse[0m
            [36m</button>[39m
          [36m</span>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      10 |
      11 |     test("There is a number entry box and two buttons", () => {
    > 12 |         expect(screen.getByRole("spinbutton")).toBeInTheDocument();
         |                       ^
      13 |         expect(screen.getAllByRole("button")).toHaveLength(2);
      14 |     });
      15 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByRole (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/form-components/GiveAttempts.test.tsx:12:23)

  ‚óè GiveAttempts Component tests ‚Ä∫ There is are initially 3 attempts

    TestingLibraryElementError: Unable to find an element with the text: /3/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mGive Attempts[0m
          [36m</h3>[39m
          [36m<div[39m
            [33mclass[39m=[32m"row"[39m
          [36m>[39m
            [36m<label[39m
              [33mclass[39m=[32m"form-label col-form-label col-sm-2"[39m
              [33mfor[39m=[32m"formMovieReleased"[39m
            [36m>[39m
              [0mNumber of Attemps:[0m
            [36m</label>[39m
            [36m<div[39m
              [33mclass[39m=[32m"col"[39m
            [36m>[39m
              [36m<input[39m
                [33mclass[39m=[32m"form-control"[39m
                [33mid[39m=[32m"formMovieReleased"[39m
                [33mvalue[39m=[32m"3"[39m
              [36m/>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<span>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mGain[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mUse[0m
            [36m</button>[39m
          [36m</span>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      15 |
      16 |     test("There is are initially 3 attempts", () => {
    > 17 |         expect(screen.getByText(/3/i)).toBeInTheDocument();
         |                       ^
      18 |     });
      19 |
      20 |     test("You can use attempts", () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/form-components/GiveAttempts.test.tsx:17:23)

  ‚óè GiveAttempts Component tests ‚Ä∫ You can use attempts

    TestingLibraryElementError: Unable to find an element with the text: /2/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mGive Attempts[0m
          [36m</h3>[39m
          [36m<div[39m
            [33mclass[39m=[32m"row"[39m
          [36m>[39m
            [36m<label[39m
              [33mclass[39m=[32m"form-label col-form-label col-sm-2"[39m
              [33mfor[39m=[32m"formMovieReleased"[39m
            [36m>[39m
              [0mNumber of Attemps:[0m
            [36m</label>[39m
            [36m<div[39m
              [33mclass[39m=[32m"col"[39m
            [36m>[39m
              [36m<input[39m
                [33mclass[39m=[32m"form-control"[39m
                [33mid[39m=[32m"formMovieReleased"[39m
                [33mvalue[39m=[32m"2"[39m
              [36m/>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<span>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mGain[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mUse[0m
            [36m</button>[39m
          [36m</span>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      21 |         const use = screen.getByRole("button", { name: /use/i });
      22 |         use.click();
    > 23 |         expect(screen.getByText(/2/i)).toBeInTheDocument();
         |                       ^
      24 |         use.click();
      25 |         use.click();
      26 |         expect(screen.getByText(/0/i)).toBeInTheDocument();

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/form-components/GiveAttempts.test.tsx:23:23)

  ‚óè GiveAttempts Component tests ‚Ä∫ You can gain arbitrary attempts

    TestingLibraryElementError: Unable to find an accessible element with the role "spinbutton"

    Here are the accessible roles:

      heading:

      Name "Give Attempts":
      [36m<h3 />[39m

      --------------------------------------------------
      textbox:

      Name "Number of Attemps:":
      [36m<input[39m
        [33mclass[39m=[32m"form-control"[39m
        [33mid[39m=[32m"formMovieReleased"[39m
        [33mvalue[39m=[32m"3"[39m
      [36m/>[39m

      --------------------------------------------------
      button:

      Name "Gain":
      [36m<button[39m
        [33mclass[39m=[32m"btn btn-primary"[39m
        [33mtype[39m=[32m"button"[39m
      [36m/>[39m

      Name "Use":
      [36m<button[39m
        [33mclass[39m=[32m"btn btn-primary"[39m
        [33mtype[39m=[32m"button"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mGive Attempts[0m
          [36m</h3>[39m
          [36m<div[39m
            [33mclass[39m=[32m"row"[39m
          [36m>[39m
            [36m<label[39m
              [33mclass[39m=[32m"form-label col-form-label col-sm-2"[39m
              [33mfor[39m=[32m"formMovieReleased"[39m
            [36m>[39m
              [0mNumber of Attemps:[0m
            [36m</label>[39m
            [36m<div[39m
              [33mclass[39m=[32m"col"[39m
            [36m>[39m
              [36m<input[39m
                [33mclass[39m=[32m"form-control"[39m
                [33mid[39m=[32m"formMovieReleased"[39m
                [33mvalue[39m=[32m"3"[39m
              [36m/>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<span>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mGain[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mUse[0m
            [36m</button>[39m
          [36m</span>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      29 |     test("You can gain arbitrary attempts", () => {
      30 |         const gain = screen.getByRole("button", { name: /gain/i });
    > 31 |         const amountToGive = screen.getByRole("spinbutton");
         |                                     ^
      32 |         userEvent.type(amountToGive, "10");
      33 |         gain.click();
      34 |         expect(screen.getByText(/13/i)).toBeInTheDocument();

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByRole (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/form-components/GiveAttempts.test.tsx:31:37)

  ‚óè GiveAttempts Component tests ‚Ä∫ Cannot gain blank amounts

    TestingLibraryElementError: Unable to find an accessible element with the role "spinbutton"

    Here are the accessible roles:

      heading:

      Name "Give Attempts":
      [36m<h3 />[39m

      --------------------------------------------------
      textbox:

      Name "Number of Attemps:":
      [36m<input[39m
        [33mclass[39m=[32m"form-control"[39m
        [33mid[39m=[32m"formMovieReleased"[39m
        [33mvalue[39m=[32m"3"[39m
      [36m/>[39m

      --------------------------------------------------
      button:

      Name "Gain":
      [36m<button[39m
        [33mclass[39m=[32m"btn btn-primary"[39m
        [33mtype[39m=[32m"button"[39m
      [36m/>[39m

      Name "Use":
      [36m<button[39m
        [33mclass[39m=[32m"btn btn-primary"[39m
        [33mtype[39m=[32m"button"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mGive Attempts[0m
          [36m</h3>[39m
          [36m<div[39m
            [33mclass[39m=[32m"row"[39m
          [36m>[39m
            [36m<label[39m
              [33mclass[39m=[32m"form-label col-form-label col-sm-2"[39m
              [33mfor[39m=[32m"formMovieReleased"[39m
            [36m>[39m
              [0mNumber of Attemps:[0m
            [36m</label>[39m
            [36m<div[39m
              [33mclass[39m=[32m"col"[39m
            [36m>[39m
              [36m<input[39m
                [33mclass[39m=[32m"form-control"[39m
                [33mid[39m=[32m"formMovieReleased"[39m
                [33mvalue[39m=[32m"3"[39m
              [36m/>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<span>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mGain[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"btn btn-primary"[39m
              [33mtype[39m=[32m"button"[39m
            [36m>[39m
              [0mUse[0m
            [36m</button>[39m
          [36m</span>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      39 |     test("Cannot gain blank amounts", () => {
      40 |         const gain = screen.getByRole("button", { name: /gain/i });
    > 41 |         const amountToGive = screen.getByRole("spinbutton");
         |                                     ^
      42 |         fireEvent.change(amountToGive, { target: { value: "" } });
      43 |         gain.click();
      44 |         expect(screen.getByText(/3/i)).toBeInTheDocument();

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:62:17
      at getByRole (node_modules/@testing-library/dom/dist/query-helpers.js:111:19)
      at Object.<anonymous> (src/form-components/GiveAttempts.test.tsx:41:37)

FAIL src/form-components/ChangeColor.test.tsx
  ‚óè ChangeColor Component tests ‚Ä∫ There are at least 8 radio buttons and the colored box

    TestingLibraryElementError: Unable to find an accessible element with the role "radio"

    Here are the accessible roles:

      heading:

      Name "Change Color":
      [36m<h3 />[39m

      --------------------------------------------------

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mChange Color[0m
          [36m</h3>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

       6 |     beforeEach(() => render(<ChangeColor />));
       7 |     test("There are at least 8 radio buttons and the colored box", () => {
    >  8 |         const radios = screen.getAllByRole("radio");
         |                               ^
       9 |         expect(radios.length).toBeGreaterThanOrEqual(8);
      10 |         expect(screen.getByTestId("colored-box")).toBeInTheDocument();
      11 |     });

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at getAllByRole (node_modules/@testing-library/dom/dist/query-helpers.js:130:15)
      at Object.<anonymous> (src/form-components/ChangeColor.test.tsx:8:31)

  ‚óè ChangeColor Component tests ‚Ä∫ Switching the color switches the displayed color.

    TestingLibraryElementError: Unable to find an accessible element with the role "radio"

    Here are the accessible roles:

      heading:

      Name "Change Color":
      [36m<h3 />[39m

      --------------------------------------------------

    Ignored nodes: comments, <script />, <style />
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<h3>[39m
            [0mChange Color[0m
          [36m</h3>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      11 |     });
      12 |     test("Switching the color switches the displayed color.", () => {
    > 13 |         const radios: HTMLInputElement[] = screen.getAllByRole("radio");
         |                                                   ^
      14 |         // Switch to first
      15 |         radios[0].click();
      16 |         let coloredBox = screen.getByTestId("colored-box");

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:38:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:90:38
      at getAllByRole (node_modules/@testing-library/dom/dist/query-helpers.js:130:15)
      at Object.<anonymous> (src/form-components/ChangeColor.test.tsx:13:51)

PASS src/components/Counter.test.tsx
PASS src/components/RevealAnswer.test.tsx
PASS src/bad-components/ColoredBox.test.tsx
PASS src/bad-components/ShoveBox.test.tsx
-----------------------------|---------|----------|---------|---------|-------------------
File                         | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
-----------------------------|---------|----------|---------|---------|-------------------
All files                    |   97.33 |     92.3 |   97.65 |   97.25 |                   
 src                         |   99.42 |    96.42 |   98.68 |    99.4 |                   
  App.tsx                    |       0 |      100 |       0 |       0 | 20                
  arrays.ts                  |     100 |      100 |     100 |     100 |                   
  functions.ts               |     100 |      100 |     100 |     100 |                   
  nested.ts                  |     100 |    90.47 |     100 |     100 | 221,292           
  objects.ts                 |     100 |      100 |     100 |     100 |                   
 src/bad-components          |     100 |       50 |     100 |     100 |                   
  ChooseTeam.tsx             |     100 |       50 |     100 |     100 | 19-39             
  ColoredBox.tsx             |     100 |      100 |     100 |     100 |                   
  DoubleHalf.tsx             |     100 |      100 |     100 |     100 |                   
  ShoveBox.tsx               |     100 |      100 |     100 |     100 |                   
 src/components              |     100 |      100 |     100 |     100 |                   
  ChangeType.tsx             |     100 |      100 |     100 |     100 |                   
  Counter.tsx                |     100 |      100 |     100 |     100 |                   
  CycleHoliday.tsx           |     100 |      100 |     100 |     100 |                   
  RevealAnswer.tsx           |     100 |      100 |     100 |     100 |                   
  StartAttempt.tsx           |     100 |      100 |     100 |     100 |                   
  TwoDice.tsx                |     100 |      100 |     100 |     100 |                   
 src/form-components         |   71.42 |    66.66 |   81.81 |   71.42 |                   
  ChangeColor.tsx            |     100 |      100 |     100 |     100 |                   
  CheckAnswer.tsx            |     100 |      100 |     100 |     100 |                   
  EditMode.tsx               |     100 |      100 |     100 |     100 |                   
  GiveAttempts.tsx           |      60 |       50 |   66.66 |      60 | 10-11,14-15,38-43 
  MultipleChoiceQuestion.tsx |     100 |      100 |     100 |     100 |                   
 src/interfaces              |       0 |        0 |       0 |       0 |                   
  answer.ts                  |       0 |        0 |       0 |       0 |                   
  question.ts                |       0 |        0 |       0 |       0 |                   
-----------------------------|---------|----------|---------|---------|-------------------

Test Suites: 4 failed, 15 passed, 19 total
Tests:       18 failed, 115 passed, 133 total
Snapshots:   0 total
Time:        10.759 s
Ran all test suites.
